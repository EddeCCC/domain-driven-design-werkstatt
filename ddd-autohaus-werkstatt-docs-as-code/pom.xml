<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>de.novatec.domain.werkstatt</groupId>
    <artifactId>ddd-autohaus-domain-werkstatt</artifactId>
    <version>1.0.0</version>
  </parent>

  <groupId>de.novatec.ddd.autohaus</groupId>
  <artifactId>ddd-autohaus-werkstatt-docs-as-code</artifactId>
  <version>1.0.0</version>

  <name>ddd-autohaus-werkstatt-docs-as-code</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <asciidoctor.maven.plugin.version>2.2.2</asciidoctor.maven.plugin.version>
    <asciidoctorj.version>2.5.3</asciidoctorj.version>
    <jruby.version>9.2.20.1</jruby.version>
    <asciidoctorj.diagram.version>2.2.1</asciidoctorj.diagram.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
    <plugin>
      <groupId>org.asciidoctor</groupId>
      <artifactId>asciidoctor-maven-plugin</artifactId>
      <version>${asciidoctor.maven.plugin.version}</version>
      <dependencies>
        <!-- Comment this section to use the default jruby artifact provided by the plugin -->
        <dependency>
          <groupId>org.jruby</groupId>
          <artifactId>jruby-complete</artifactId>
          <version>${jruby.version}</version>
        </dependency>
        <!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
        <dependency>
          <groupId>org.asciidoctor</groupId>
          <artifactId>asciidoctorj</artifactId>
          <version>${asciidoctorj.version}</version>
        </dependency>
        <dependency>
          <groupId>org.asciidoctor</groupId>
          <artifactId>asciidoctorj-diagram</artifactId>
          <version>${asciidoctorj.diagram.version}</version>
        </dependency>
      </dependencies>
      <configuration>
        <requires>
          <require>asciidoctor-diagram</require>
        </requires>
        <sourceDirectory>src/docs/asciidoc</sourceDirectory>
        <!-- If you set baseDir to ${project.basedir}, top-level includes are resolved relative to the project root -->
        <!--
        <baseDir>${project.basedir}</baseDir>
        -->
        <!-- Attributes common to all output formats -->
        <attributes>
          <sourcedir>${project.build.sourceDirectory}</sourcedir>
          <project-version>${project.version}</project-version>
        </attributes>
      </configuration>
      <executions>
        <execution>
          <id>asciidoc-to-html</id>
          <phase>generate-resources</phase>
          <goals>
            <goal>process-asciidoc</goal>
          </goals>
          <configuration>
            <outputDirectory>${project.basedir}/arc42</outputDirectory>
            <backend>html5</backend>
            <!--
            Scenarios for linking vs embedding assets:
            Link to both stylesheets and images::
              - don't set embedAssets option
              - set linkcss attribute to true
              - set imagesdir attribute to path relative to AsciiDoc source file
              <attributes>
                  <linkcss>true</linkcss>
                  <imagesdir>./images</imagesdir>
              </attributes>
            Embed stylesheets and images::
              - set embedAssets option to true
              - don't set linkcss attribute
              - set imagesdir attribute to path relative to project root
              <embedAssets>true</embedAssets>
              <attributes>
                  <imagesdir>src/docs/asciidoc/images</imagesdir>
              </attributes>
            Link to stylesheets but embed images::
              - set embedAssets option to true
              - set linkcss attribute to true
              - set imagesdir attribute to path relative to project root
              <embedAssets>true</embedAssets>
              <attributes>
                  <linkcss>true</linkcss>
                  <imagesdir>src/docs/asciidoc/images</imagesdir>
              </attributes>
            Embed stylesheets but link images (default)::
              - don't set embedAssets option
              - don't set linkcss attribute
              - set imagesdir attribute to path relative to AsciiDoc source file
              <attributes>
                  <imagesdir>./images</imagesdir>
              </attributes>
            IMPORTANT: When you enable image embedding, you must qualify the path the the imagesdir, as shown above.
            -->
            <attributes>
              <source-highlighter>coderay</source-highlighter>
              <imagesdir>../images</imagesdir>
              <toc>left</toc>
              <icons>font</icons>
              <sectanchors>true</sectanchors>
              <!-- set the idprefix to blank -->
              <idprefix/>
              <idseparator>-</idseparator>
              <docinfo1>true</docinfo1>
            </attributes>
            <embedAssets>true</embedAssets>
          </configuration>
        </execution>
      </executions>
    </plugin>
    </plugins>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
